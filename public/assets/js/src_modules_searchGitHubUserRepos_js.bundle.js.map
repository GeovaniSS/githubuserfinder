{"version":3,"file":"src_modules_searchGitHubUserRepos_js.bundle.js","mappings":";;;;;;;;;;;;;;;+CACA;;;;;;AADA,IAAMA,KAAK,GAAGC,mBAAO,CAAC,4CAAD,CAArB;;AAEA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,IAAI;EAAA,8CAAoCA,IAApC;AAAA,CAAlC;;AAEO,IAAMC,oBAAoB;EAAA,sEAAG,iBAAMD,IAAN;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEHH,KAAK,CAACE,qBAAqB,CAACC,IAAD,CAAtB,CAFF;;UAAA;YAE1BE,cAF0B;YAG1BC,eAH0B,GAGRD,cAAc,CAACE,IAHP;YAAA,iCAIzBD,eAJyB;;UAAA;YAAA;YAAA;YAAA,iCAMzB,KANyB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAApBF,oBAAoB;IAAA;EAAA;AAAA,GAA1B;;;;;;;;;;;;;;ACJP,IAAMI,WAAW,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAApB;AAEO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAL,eAAe,EAAI;EACtD,IAAMM,KAAK,GAAGN,eAAe,CAACO,MAAhB,CAAuB,UAACC,GAAD,EAAMC,IAAN,EAAe;IAClD,IAAQC,IAAR,GAA0DD,IAA1D,CAAQC,IAAR;IAAA,IAAcC,WAAd,GAA0DF,IAA1D,CAAcE,WAAd;IAAA,IAA2BC,QAA3B,GAA0DH,IAA1D,CAA2BG,QAA3B;IAAA,IAAqCC,gBAArC,GAA0DJ,IAA1D,CAAqCI,gBAArC;IACA,OAAOL,GAAG,6FAGKI,QAHL,uCAGuCF,IAHvC,6DAIsBC,WAAW,KAAK,IAAhB,GAAuB,gBAAvB,GAA0CA,WAJhE,oMAUqBE,gBAVrB,4DAAV;EAeD,CAjBa,EAiBX,EAjBW,CAAd;EAmBAX,WAAW,CAACY,SAAZ,GAAwBR,KAAxB;AACD,CArBM;;;;;;;;;;;;;;;;;;+CCDP;;;;;;AADA;AACA;AAEO,IAAMS,qBAAqB;EAAA,sEAAG,iBAAMlB,IAAN;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACLC,2EAAoB,CAACD,IAAD,CADf;;UAAA;YAC7BG,eAD6B;;YAAA,IAG/BA,eAH+B;cAAA;cAAA;YAAA;;YAAA;;UAAA;YAKnCK,6EAAqB,CAACL,eAAD,CAArB;;UALmC;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAArBe,qBAAqB;IAAA;EAAA;AAAA,GAA3B","sources":["webpack://githubuserfinder/./src/modules/fetchGitHubUserRepos.js","webpack://githubuserfinder/./src/modules/renderGitHubUserRepos.js","webpack://githubuserfinder/./src/modules/searchGitHubUserRepos.js"],"sourcesContent":["const axios = require('axios')\r\n\r\nconst getGitHubUserReposUrl = user => `https://api.github.com/users/${user}/repos`\r\n\r\nexport const fetchGitHubUserRepos = async(user) => {\r\n  try {\r\n    const gitHubResponse = await axios(getGitHubUserReposUrl(user))\r\n    const gitHubUserRepos = gitHubResponse.data\r\n    return gitHubUserRepos\r\n  } catch(e) {\r\n    return false\r\n  }\r\n}","const reposResult = document.querySelector('.repos')\r\n\r\nexport const renderGitHubUserRepos = gitHubUserRepos => {\r\n  const repos = gitHubUserRepos.reduce((acc, repo) => {\r\n    const { name, description, html_url, stargazers_count } = repo\r\n    return acc + ` \r\n    <div class=\"repo\">\r\n      <div class=\"repo-info\">\r\n        <a href=\"${html_url}\"> <h2 id=\"repos-name\">${name}</h2> </a>\r\n        <p id=\"repos-description\">${description === null ? 'No description' : description}</p>\r\n      </div>\r\n\r\n      <div class=\"repo-star\">\r\n        <div class=\"star\">\r\n          <span class=\"material-icons-outlined\">star</span>\r\n          <span id=\"total-stars\">${stargazers_count}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    `\r\n  }, '')\r\n\r\n  reposResult.innerHTML = repos\r\n}","import { fetchGitHubUserRepos } from \"./fetchGitHubUserRepos\"\r\nimport { renderGitHubUserRepos } from './renderGitHubUserRepos'\r\n\r\nexport const searchGitHubUserRepos = async(user) => {\r\n  const gitHubUserRepos = await fetchGitHubUserRepos(user)\r\n\r\n  if(!gitHubUserRepos) return\r\n  \r\n  renderGitHubUserRepos(gitHubUserRepos)\r\n}"],"names":["axios","require","getGitHubUserReposUrl","user","fetchGitHubUserRepos","gitHubResponse","gitHubUserRepos","data","reposResult","document","querySelector","renderGitHubUserRepos","repos","reduce","acc","repo","name","description","html_url","stargazers_count","innerHTML","searchGitHubUserRepos"],"sourceRoot":""}